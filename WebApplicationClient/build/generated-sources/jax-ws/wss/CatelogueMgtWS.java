
package wss;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CatelogueMgtWS", targetNamespace = "http://WSS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CatelogueMgtWS {


    /**
     * 
     * @param itemID
     * @return
     *     returns boolean
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeItem", targetNamespace = "http://WSS/", className = "wss.RemoveItem")
    @ResponseWrapper(localName = "removeItemResponse", targetNamespace = "http://WSS/", className = "wss.RemoveItemResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/removeItemRequest", output = "http://WSS/CatelogueMgtWS/removeItemResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/removeItem/Fault/ExistException")
    })
    public boolean removeItem(
        @WebParam(name = "itemID", targetNamespace = "")
        String itemID)
        throws ExistException_Exception
    ;

    /**
     * 
     * @param country
     * @param name
     * @param spec
     * @return
     *     returns wss.RegionEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addRegion", targetNamespace = "http://WSS/", className = "wss.AddRegion")
    @ResponseWrapper(localName = "addRegionResponse", targetNamespace = "http://WSS/", className = "wss.AddRegionResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/addRegionRequest", output = "http://WSS/CatelogueMgtWS/addRegionResponse")
    public RegionEntity addRegion(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "country", targetNamespace = "")
        String country,
        @WebParam(name = "spec", targetNamespace = "")
        String spec);

    /**
     * 
     * @param address
     * @param contact
     * @param name
     * @return
     *     returns wss.WineryEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addWinery", targetNamespace = "http://WSS/", className = "wss.AddWinery")
    @ResponseWrapper(localName = "addWineryResponse", targetNamespace = "http://WSS/", className = "wss.AddWineryResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/addWineryRequest", output = "http://WSS/CatelogueMgtWS/addWineryResponse")
    public WineryEntity addWinery(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "address", targetNamespace = "")
        String address,
        @WebParam(name = "contact", targetNamespace = "")
        String contact);

    /**
     * 
     * @param itemName
     * @param regionName
     * @param vitage
     * @param expiringDate
     * @param wineryName
     * @param tastingNote
     * @param cateName
     * @return
     *     returns wss.ItemEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addItem", targetNamespace = "http://WSS/", className = "wss.AddItem")
    @ResponseWrapper(localName = "addItemResponse", targetNamespace = "http://WSS/", className = "wss.AddItemResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/addItemRequest", output = "http://WSS/CatelogueMgtWS/addItemResponse")
    public ItemEntity addItem(
        @WebParam(name = "cateName", targetNamespace = "")
        String cateName,
        @WebParam(name = "regionName", targetNamespace = "")
        String regionName,
        @WebParam(name = "wineryName", targetNamespace = "")
        String wineryName,
        @WebParam(name = "itemName", targetNamespace = "")
        String itemName,
        @WebParam(name = "vitage", targetNamespace = "")
        String vitage,
        @WebParam(name = "expiringDate", targetNamespace = "")
        XMLGregorianCalendar expiringDate,
        @WebParam(name = "tastingNote", targetNamespace = "")
        String tastingNote);

    /**
     * 
     * @param name
     * @param spec
     * @return
     *     returns wss.CategoryEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addCategory", targetNamespace = "http://WSS/", className = "wss.AddCategory")
    @ResponseWrapper(localName = "addCategoryResponse", targetNamespace = "http://WSS/", className = "wss.AddCategoryResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/addCategoryRequest", output = "http://WSS/CatelogueMgtWS/addCategoryResponse")
    public CategoryEntity addCategory(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "spec", targetNamespace = "")
        String spec);

    /**
     * 
     * @return
     *     returns java.util.List<wss.WineryEntity>
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllWinery", targetNamespace = "http://WSS/", className = "wss.GetAllWinery")
    @ResponseWrapper(localName = "getAllWineryResponse", targetNamespace = "http://WSS/", className = "wss.GetAllWineryResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getAllWineryRequest", output = "http://WSS/CatelogueMgtWS/getAllWineryResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getAllWinery/Fault/ExistException")
    })
    public List<WineryEntity> getAllWinery()
        throws ExistException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<wss.RegionEntity>
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRegion", targetNamespace = "http://WSS/", className = "wss.GetAllRegion")
    @ResponseWrapper(localName = "getAllRegionResponse", targetNamespace = "http://WSS/", className = "wss.GetAllRegionResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getAllRegionRequest", output = "http://WSS/CatelogueMgtWS/getAllRegionResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getAllRegion/Fault/ExistException")
    })
    public List<RegionEntity> getAllRegion()
        throws ExistException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<wss.CategoryEntity>
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCategory", targetNamespace = "http://WSS/", className = "wss.GetAllCategory")
    @ResponseWrapper(localName = "getAllCategoryResponse", targetNamespace = "http://WSS/", className = "wss.GetAllCategoryResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getAllCategoryRequest", output = "http://WSS/CatelogueMgtWS/getAllCategoryResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getAllCategory/Fault/ExistException")
    })
    public List<CategoryEntity> getAllCategory()
        throws ExistException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<wss.ItemEntity>
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllItem", targetNamespace = "http://WSS/", className = "wss.GetAllItem")
    @ResponseWrapper(localName = "getAllItemResponse", targetNamespace = "http://WSS/", className = "wss.GetAllItemResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getAllItemRequest", output = "http://WSS/CatelogueMgtWS/getAllItemResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getAllItem/Fault/ExistException")
    })
    public List<ItemEntity> getAllItem()
        throws ExistException_Exception
    ;

    /**
     * 
     * @param itemId
     * @return
     *     returns wss.ItemEntity
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemById", targetNamespace = "http://WSS/", className = "wss.GetItemById")
    @ResponseWrapper(localName = "getItemByIdResponse", targetNamespace = "http://WSS/", className = "wss.GetItemByIdResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getItemByIdRequest", output = "http://WSS/CatelogueMgtWS/getItemByIdResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getItemById/Fault/ExistException")
    })
    public ItemEntity getItemById(
        @WebParam(name = "itemId", targetNamespace = "")
        String itemId)
        throws ExistException_Exception
    ;

    /**
     * 
     * @param wineryId
     * @return
     *     returns wss.WineryEntity
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWineryById", targetNamespace = "http://WSS/", className = "wss.GetWineryById")
    @ResponseWrapper(localName = "getWineryByIdResponse", targetNamespace = "http://WSS/", className = "wss.GetWineryByIdResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getWineryByIdRequest", output = "http://WSS/CatelogueMgtWS/getWineryByIdResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/getWineryById/Fault/ExistException")
    })
    public WineryEntity getWineryById(
        @WebParam(name = "wineryId", targetNamespace = "")
        String wineryId)
        throws ExistException_Exception
    ;

    /**
     * 
     * @param wineryId
     * @return
     *     returns boolean
     * @throws ExistException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeWinery", targetNamespace = "http://WSS/", className = "wss.RemoveWinery")
    @ResponseWrapper(localName = "removeWineryResponse", targetNamespace = "http://WSS/", className = "wss.RemoveWineryResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/removeWineryRequest", output = "http://WSS/CatelogueMgtWS/removeWineryResponse", fault = {
        @FaultAction(className = ExistException_Exception.class, value = "http://WSS/CatelogueMgtWS/removeWinery/Fault/ExistException")
    })
    public boolean removeWinery(
        @WebParam(name = "wineryId", targetNamespace = "")
        String wineryId)
        throws ExistException_Exception
    ;

    /**
     * 
     * @param itemName
     * @return
     *     returns wss.ItemEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getItemByName", targetNamespace = "http://WSS/", className = "wss.GetItemByName")
    @ResponseWrapper(localName = "getItemByNameResponse", targetNamespace = "http://WSS/", className = "wss.GetItemByNameResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getItemByNameRequest", output = "http://WSS/CatelogueMgtWS/getItemByNameResponse")
    public ItemEntity getItemByName(
        @WebParam(name = "itemName", targetNamespace = "")
        String itemName);

    /**
     * 
     * @param wineryName
     * @return
     *     returns wss.WineryEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWineryByName", targetNamespace = "http://WSS/", className = "wss.GetWineryByName")
    @ResponseWrapper(localName = "getWineryByNameResponse", targetNamespace = "http://WSS/", className = "wss.GetWineryByNameResponse")
    @Action(input = "http://WSS/CatelogueMgtWS/getWineryByNameRequest", output = "http://WSS/CatelogueMgtWS/getWineryByNameResponse")
    public WineryEntity getWineryByName(
        @WebParam(name = "wineryName", targetNamespace = "")
        String wineryName);

}
